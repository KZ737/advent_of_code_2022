import numpy as np
⬅️💾 = open("./day_14/input.txt", "r")

🟫💾 = []
for ➖ in ⬅️💾:
    💾 = [list(map(int, 📈.split(","))) for 📈 in ➖.strip().split(" -> ")]
    if 💾 not in 🟫💾:
        🟫💾.append(💾)

🚦⚪ = [500, 0]
🚧 = [🚦⚪.copy(), 🚦⚪.copy()]
for 🟫 in 🟫💾:
    for ⭐ in 🟫:
        🚧[0][0] = min(🚧[0][0], ⭐[0])
        🚧[0][1] = min(🚧[0][1], ⭐[1])
        🚧[1][0] = max(🚧[1][0], ⭐[0])
        🚧[1][1] = max(🚧[1][1], ⭐[1])
🚧[1][1] += 2

🔃 = 🚧[1][1] - 🚧[0][1]
if 🔃 > (🚦⚪[0]-🚧[0][0]):
    🚧[0][0] -= (🔃 - (🚦⚪[0] - 🚧[0][0]))
if 🔃 > (🚧[1][0] - 🚦⚪[0]):
    🚧[1][0] += (🔃 - (🚧[1][0] - 🚦⚪[0]))
🚦⚪ = [🚦⚪[0] - 🚧[0][0], 🚦⚪[1] - 🚧[0][1]]

🟫🗺️ = np.full((🚧[1][1]-🚧[0][1]+1, 🚧[1][0]-🚧[0][0]+1), fill_value="🟦", dtype=np.str_)
for 🟫 in 🟫💾:
    🚦⭐ = 🟫[0]
    for ⭐ in 🟫[1:]:
        🟫🚦 = [min(🚦⭐[0]-🚧[0][0], ⭐[0]-🚧[0][0]), min(🚦⭐[1]-🚧[0][1], ⭐[1]-🚧[0][1])]
        🟫🏁 = [max(🚦⭐[0]-🚧[0][0], ⭐[0]-🚧[0][0]), max(🚦⭐[1]-🚧[0][1], ⭐[1]-🚧[0][1])]
        🟫🗺️[🟫🚦[1]:🟫🏁[1]+1,🟫🚦[0]:🟫🏁[0]+1] = "🟫"
        🚦⭐ = ⭐

🚧 = [[0, 0], [🚧[1][0]-🚧[0][0], 🚧[1][1] - 🚧[0][1]]]
🟫🗺️[🚧[1][1], :] = 1

class 🟨:
    def __init__(self, 🚦📈, 🟫🗺️):
        self.📈 = 🚦📈
        🟫🗺️[self.📈[1], self.📈[0]] = "🟨"

    def 🟨⬇️(self, 🆕📈, 🟫🗺️):
        # 🟫🗺️[*list(reversed(self.📈))] = "🟦"
        🟫🗺️[self.📈[1], self.📈[0]] = "🟦"
        self.📈 = 🆕📈
        🟫🗺️[self.📈[1], self.📈[0]] = "🟨"
        # 🟫🗺️[*list(reversed(self.📈))] = "🟨"

    def ⬇️1️⃣(self, 🟫🗺️, 🚧):
        if self.📈[1] == 🚧[1][1]:
            return 2
        if 🟫🗺️[self.📈[1]+1, self.📈[0]] == "🟦":
            self.🟨⬇️([self.📈[0], self.📈[1]+1], 🟫🗺️)
            return 0
        if self.📈[0] > 🚧[0][0]:
            if 🟫🗺️[self.📈[1]+1, self.📈[0]-1] == "🟦":
                self.🟨⬇️([self.📈[0]-1, self.📈[1]+1], 🟫🗺️)
                return 0        
            if self.📈[0] < 🚧[1][0]:
                if 🟫🗺️[self.📈[1]+1, self.📈[0]+1] == "🟦":
                    self.🟨⬇️([self.📈[0]+1, self.📈[1]+1], 🟫🗺️)
                    return 0
                else:
                    return 1
        return 2

    def ⬇️🛑(self, 🟫🗺️, 🚧):
        while True:
            ⬇️ = self.⬇️1️⃣(🟫🗺️, 🚧)
            if ⬇️ == 0:
                continue
            else:
                return ⬇️

🟨🧮 = 0
while True:
    🟨🧮 += 1
    🆕🟨 = 🟨(🚦⚪, 🟫🗺️)
    🛑 = 🆕🟨.⬇️🛑(🟫🗺️, 🚧)
    if 🆕🟨.📈[1] == 0:
        break
    else:
        continue

print(🟨🧮)

⬅️💾.close()

➡️💾 = open("./day_14/output.txt", "w", encoding="utf-8")
np.set_printoptions(threshold=np.inf)
➡️💾.write(np.array2string(🟫🗺️, max_line_width=np.inf, separator='', formatter={"str_kind": lambda x: x}))
➡️💾.close()